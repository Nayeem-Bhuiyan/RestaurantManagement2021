@model SalaryStructureViewModel
@{
    ViewData["Title"] = "CreateMonthlySalary";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Style{

    <link href="~/lib/jquery-ui/css/jquery-ui.min.css" rel="stylesheet" />
    <style>
        /*.ui-autocomplete {
            cursor: pointer;
            height: 400px;
            width: 300px;
            overflow-y: scroll;
            background-color: white;
            color: rgb(0,188,212);
            z-index: 1050;*/
        /*outline-style:outset;*/
        /*}*/
    </style>
}
<!-- Main Content Begin-->
<div class="row">
    <div class="col-12 col-md-12 col-lg-12">
        <div class="card">
            <form asp-area="SalaryArea" asp-controller="EarningSalary" asp-action="Index" id="frmData">
                <div class="card text-center" style="background-color:green!important;color:white!important">
                    <h4>Add New Monthly Earning Salary</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <span class="font-weight-bold">Salary Structure:</span>  <label id="lastSalaryStructure">0</label>
                        </div>
                        <div class="col-md-4 text-right">
                            <span class="font-weight-bold ">Hourly Pay Rate</span> <label id="lasthourlyPayRate">0</label>
                        </div>
                        <div class="col-md-4 text-right">
                            <button type="button" class="btn btn-success text-right" onclick="ShowCurrentMonthEarningModal()">
                                Earning List
                            </button>
                        </div>
                    </div>
                    <div class="row">

                        <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6">
                            <input type="hidden" id="EarningSalaryId" name="EarningSalaryId" value="0" />
                            <input type="hidden" id="totalSalary" name="totalSalary" value="0" />
                            <input type="hidden" id="hourlyPayRate" name="hourlyPayRate" value="0" />
                            <input type="hidden" id="SalaryStructureId" name="SalaryStructureId" value="0" />

                            <div class="form-group">
                                <label>Employee</label>
                                <input type="text" id="EmployeeName" name="EmployeeName" value="" class="form-control" required readonly>
                                <input type="hidden" id="EmployeeId" name="EmployeeId" value="0" />
                            </div>
                            <div class="form-group">
                                <label>Absent Total(Days)</label>
                                <input type="text" id="absentTotal" name="absentTotal" class="form-control" required>
                            </div>
                            <div class="form-group">
                                <label>Over time(Hours)</label>
                                <input type="text" id="overtimes" name="overtimes" class="form-control">
                            </div>
                         


                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6">

                            <div class="form-group">
                                <label>Salary Month</label>
                                <select id="month" name="month" class="form-control" required>
                                    <option value="0">Select</option>
                                    <option value="1">January</option>
                                    <option value="2">February</option>
                                    <option value="3">March</option>
                                    <option value="4">April</option>
                                    <option value="5">May</option>
                                    <option value="6">Jun</option>
                                    <option value="7">July</option>
                                    <option value="8">August</option>
                                    <option value="9">September</option>
                                    <option value="10">October</option>
                                    <option value="11">November</option>
                                    <option value="12">December</option>
                                </select>

                            </div>
                            <div class="form-group">
                                <label>Year</label>
                                <select id="year" name="year" class="form-control" required>
                                    <option value="0">Select</option>

                                    @{
                                        int year = 2020;
                                        @for (int i = 1; i <= 2040; i++)
                                        {
                                           
                                            
                                            if (year == DateTime.Now.Year)
                                            {
                                                <option value="@year" selected>@year</option>
                                            }
                                            else
                                            {
                                                <option value="@year">@year</option>
                                            }


                                            year = year + 1;
                                        }


                                    }
                                </select>

                            </div>
                            <div class="form-group">
                                <label>Special</label>
                                <input type="text" id="special" name="special" class="form-control">
                            </div>

                        </div>

                    </div>

                </div>
                <div class="card-footer text-sm-left text-md-left text-lg-left text-xl-left">
                    <button type="submit" class="btn btn-primary" id="btnSave">Submit</button>
                </div>
            </form>
        </div>

    </div>

</div>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h4>Employee Salary Structure</h4>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered dt-responsive nowrap" style="width:100%" id="tblData">
                        <thead>
                            <tr class="text-center">
                                <th class="text-center">#</th>
                                <th>Action</th>
                                <th>Name</th>
                                <th>Basic</th>
                                <th>Home Rent</th>
                                <th>Medical</th>
                                <th>Transport</th>
                                <th>Hourly Pay Rate</th>
                                <th>Salary</th>
                                <th>Active From</th>
                                <th>Active TO</th>

                            </tr>
                        </thead>
                        <tbody>
                            @{

                                @if (Model.salaryStructures != null)
                                {
                                    int Sl = 1;
                                    @foreach (var data in Model.salaryStructures.OrderByDescending(x => x.totalSalary))
                                    {
                                        <tr class="text-center">
                                            <td>
                                                @Sl
                                            </td>
                                            <td class="text-nowrap">
                                                <a href="#" class="badge badge-warning badge-shadow" onclick="Pay(@data.Id,'@data.Employee.name','@data.Employee.contactNo',@data.EmployeeId,@data.hourlyPayRate,@data.totalSalary,'@data.activeFrom','@data.activeTo')">Salary Prepaired</a>

                                            </td>
                                            <td>@data?.Employee?.name</td>
                                            <td>@data?.basic</td>
                                            <td>@data?.homeRent</td>
                                            <td>@data?.medical</td>
                                            <td>@data?.transport</td>
                                            <td>@data?.hourlyPayRate</td>
                                            <td>@data?.totalSalary</td>
                                            <td>@data?.activeFrom?.ToString("dd-MM-yyyy")</td>
                                            <td>@data?.activeTo?.ToString("dd-MM-yyyy")</td>



                                        </tr>
                                        Sl = Sl + 1;
                                    }
                                }
                                else
                                {
                                    <tr>
                                    </tr>
                                }

                            }


                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="CurrentMonthEarningModalLabel"
     aria-hidden="true" id="CurrentMonthEarningModal" data-backdrop="false">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="CurrentMonthEarningModalLabel">Current Month Earning Salary Informations</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <table class="table table-striped table-bordered dt-responsive nowrap" style="width:100%" id="tblData2">
                            <thead>
                                <tr class="text-center">
                                    <th class="text-center">#</th>
                                    <th>Name</th>
                                    <th>Net Salary</th>
                                    <th>Pay Rate</th>
                                    <th>Total Deduction</th>
                                    <th>Basic Pay</th>
                                    <th>Over Time PayAmount</th>
                                    <th>Special</th>
                                    <th>Net Payable</th>
                                    <th>Month</th>
                                    <th>Year</th>
                                    <th>Absent</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{

                                    @if (Model.earningSalaries != null)
                                    {
                                        int Sl = 1;
                                        int? deduction = 0;
                                        int? basicPay = 0;
                                        @foreach (var data in Model.earningSalaries.Where(x => x.month.Value == DateTime.Now.Month - 1).OrderByDescending(x => x.createdAt))
                                        {
                                            deduction = @data?.SalaryStructure?.totalSalary - @data?.totalPayableSalary;
                                            basicPay = @data?.SalaryStructure?.totalSalary - deduction;
                                            <tr class="text-center">
                                                <td>
                                                    @Sl
                                                </td>
                                                <td>@data?.Employee.name</td>
                                                <td>@data?.SalaryStructure?.totalSalary</td>
                                                <td>@data?.SalaryStructure?.hourlyPayRate</td>
                                                <td>@deduction</td>
                                                <td>@basicPay</td>
                                                <td>@data?.overTimePayAmount</td>
                                                <td>@data?.special</td>
                                                <td>@data?.totalPayableSalary</td>
                                                <td>@data?.month</td>
                                                <td>@data?.year</td>
                                                <td>@data?.absentTotal hr</td>
                                                <td class="text-nowrap">

                                                    <a href="#" class="badge badge-danger badge-shadow" onclick="DeleteSalary(@data.Id)">Delete</a>
                                                </td>


                                            </tr>
                                            Sl = Sl + 1;
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                        </tr>
                                    }

                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Main Content End-->
@section Scripts{

    <script src="~/lib/jquery-ui/js/jquery-ui.min.js"></script>
    <script>
        $(document).ready(function () {

            $("#tblData").DataTable();
            $("#tblData2").DataTable();
            $('#activeFrom').flatpickr({ dateFormat: "Y-m-d", minDate: "2010-01" });
            $('#activeTo').flatpickr({ dateFormat: "Y-m-d", minDate: "2010-01" });


            $("#EmployeeName").change(function () {
                if (parseInt($("#EmployeeId").val().trim()) <= 0 || $("#EmployeeId").val().trim() == null || $("#EmployeeId").val().trim() == "") {
                    swal.fire('warning', 'Please type a valid Employee name!!', 'warning');
                    $("#EmployeeName").val("");
                    $("#EmployeeId").val(0);
                }
            })

            Common.Ajax('GET', '/EmployeeArea/Employee/GetEmployees', [], 'json', ajaxGetAllItem);
            CleanData();

            $("#month").val(@Model.salaryMonth);
        });


        function ShowCurrentMonthEarningModal() {
            $("#CurrentMonthEarningModal").modal("show");
        }

        function ajaxGetAllItem(response) {
            $("#EmployeeId").val("");
            var empData = [];
            $.each(response, function (id, option) {
                var obj = new Object();
                obj.key = option.Id;
                obj.value = option.name + " (" + option.contactNo + ")";

                empData.push(obj);

            });
            $('#EmployeeName').autocomplete({
                source: empData,
                select: function (event, ui) {

                    $("#EmployeeId").val(ui.item.key);
                    $("#EmployeeName").val(ui.item.value);
                }
            });
        }

        function CleanData() {

            $("#SalaryStructureId").val(0);
            $("#EmployeeId").val(0);
            $("#EmployeeName").val("");
            $("#basic").val("");
            $("#activeFrom").val("");
            $("#activeTo").val("");

        }

        $('#btnSave').click(function () {

            $('#frmData').on('submit', function (event) {

                event.preventDefault();
                var frmdata = $('#frmData').serialize();
                console.log(frmdata);
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You want to save this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, save it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "/SalaryArea/EarningSalary/Index",
                            type: "POST",
                            data: frmdata,
                            dataType: "json",
                            beforeSend: function () {
                                $('#btnSave').attr('disabled', 'disabled');
                                $('#btnSave').val('Submitting...');
                            },
                        }).done(function (data) {

                            swal.fire('success', 'Saved Successfully!', 'success').then(function () {
                                CleanData();
                                location.reload();
                            });

                        }).fail(function () {
                            swal.fire('warning', 'Failed!', 'warning');
                        })
                    }

                });

            })

        })


        function Pay(Id, name, contactNo, EmployeeId, hourlyPayRate, totalSalary, activeFrom, activeTo) {
            $("#SalaryStructureId").val(Id);
            $("#EmployeeName").val(name + " (" + contactNo+")");
            $("#EmployeeId").val(EmployeeId);
            $("#hourlyPayRate").val(hourlyPayRate);
            $("#totalSalary").val(totalSalary);
            $("#activeFrom").val(activeFrom);
            $("#activeTo").val(activeTo);
            $("#lastSalaryStructure").text(totalSalary);
            $("#lasthourlyPayRate").text(hourlyPayRate);

            if (parseInt($("#EmployeeId").val().trim()) <= 0 || $("#EmployeeId").val().trim() == null || $("#EmployeeId").val().trim() == "") {
                swal.fire('warning', 'Please type a valid Employee name!!', 'warning');
                $("#EmployeeName").val("");
                $("#EmployeeId").val(0);
            }
        }

        function Delete(Id) {

            Swal.fire({
                title: 'Are you sure?',
                text: "You want to Delete this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/SalaryArea/EarningSalary/Delete/" + Id,
                        data: { Id: Id },
                        type: 'POST',
                    })
                        .done(function () {

                            swal.fire('Delete', 'Delete Successfully!', 'success').then(function () {
                                window.location.reload();
                            });
                        })
                        .fail(function () {
                            swal.fire('Cancelled', 'It will not be deleted. Please try again later !!!', 'error');
                        });
                }

            });
        }

        function DeleteSalary(Id) {

            Swal.fire({
                title: 'Are you sure?',
                text: "You want to Delete this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/SalaryArea/EarningSalary/Delete/" + Id,
                        data: { Id: Id },
                        type: 'POST',
                    })
                        .done(function () {

                            swal.fire('Delete', 'Delete Successfully!', 'success').then(function () {
                                window.location.reload();
                            });
                        })
                        .fail(function () {
                            swal.fire('Cancelled', 'It will not be deleted. Please try again later !!!', 'error');
                        });
                }

            });
        }
    </script>
}

